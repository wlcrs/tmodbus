[project]
name = "tmodbus"
version = "0.1.0"
description = "A modern, strongly typed Modbus client library."
readme = "README.md"
requires-python = ">=3.12"
keywords = ["modbus", "modbus-tcp", "modbus-rtu"]

[project.optional-dependencies]
tests = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
]

async-rtu = [
    "pyserial-asyncio-fast>=0.16",
]

smart = [
    "tenacity>=9.1.2",
]

[build-system]
requires = ["uv_build>=0.8.4,<0.9.0"]
build-backend = "uv_build"


[tool.ruff]
line-length = 120

[tool.ruff.lint]
ignore = [
  "ANN401", # Opinioated warning on disallowing dynamically typed expressions
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "D417", # False positives in some occasions
  "PLR2004", # Just annoying, not really useful
  "S101", # allow asserts

  # Conflicts with the Ruff formatter
  "COM812",
  "ISC001",

]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]

"tests/**" = [
    "S101", # allow asserts in tests
    "ANN001", 
    "ANN201", # no return type annotations needed
    "ARG001", # not using all arguments is ok in tests
    "D100", # no docstrings for modules required in tests
    "D101", # no docstrings for classes required in tests
    "D103", # no docstrings for public methods required in tests
    "D104", # no docstrings for packages required in tests
    "EM101", # dummy exceptions in tests
    "SLF001", # access to private members is acceptable for testing purposes
    "TRY003",
]

"integration-tests/**" = [
    "S101", # allow asserts in tests
    "ANN201", # no return type annotations needed
    "D100", # no docstrings for modules required in tests
    "D101", # no docstrings for classes required in tests
    "D103", # no docstrings for public methods required in tests
    "D104", # no docstrings for packages required in tests
]

"examples/**" = [
    "INP001", # not a package
    "T201", # use print statements in examples
]


[tool.pytest.ini_options]
#addopts = "--cov=tmodbus --cov-report=term-missing "
asyncio_mode = "auto"
