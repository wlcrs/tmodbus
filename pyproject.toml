[project]
name = "tmodbus"
description = "A modern, strongly typed Modbus client library."
license = { text = "BSD-3-Clause" }
authors = [{ name = "wlcrs" }]
readme = "README.md"
requires-python = ">=3.12"
keywords = [
  "modbus",
  "modbus-tcp",
  "modbus-rtu",
  "modbus-ascii",
  "modbus-rtu-over-tcp",
]

classifiers = [
  "Framework :: AsyncIO",
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Topic :: System :: Networking",
  "Typing :: Typed",
]

dynamic = ["version"]

dependencies = ["tenacity>=9.1.2"]

[project.urls]
HomePage = "https://github.com/wlcrs/tmodbus"
Documentation = "https://tmodbus.readthedocs.org"
Repository = "https://github.com/wlcrs/tmodbus"
Issues = "https://github.com/wlcrs/tmodbus/issues"
Changelog = "https://github.com/wlcrs/tmodbus/releases"

[project.optional-dependencies]

async-serial = ["pyserial-asyncio-fast>=0.16"]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
only-packages = true

[tool.hatch.build.targets.sdist]
only-include = ["examples", "src", "tests"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/tmodbus/_version.py"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
ignore = [
  "ANN401",  # Opinioated warning on disallowing dynamically typed expressions
  "D203",    # Conflicts with other rules
  "D213",    # Conflicts with other rules
  "PLR2004", # Just annoying, not really useful
  "S101",    # allow asserts

  # Conflicts with the Ruff formatter
  "COM812",
  "ISC001",

]
select = ["ALL"]

[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
platform = "linux"
python_version = "3.12"

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
#addopts = "--cov"
asyncio_mode = "auto"

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["tmodbus"]
omit = [
  "src/tmodbus/_version.py", # automatically generated by hatch-vcs
]
[tool.coverage.report]
show_missing = true
fail_under = 100


[tool.uv]
prerelease = "if-necessary"

[dependency-groups]
dev = [
  "codespell==2.4.1",
  "covdefaults==2.3.0",
  "coverage[toml]==7.10.7",
  "docstrfmt>=1.11.1",
  "mypy==1.18.2",
  "pre-commit==4.3.0",
  "pre-commit-hooks==6.0.0",
  "pytest==8.4.2",
  "pytest-asyncio==1.2.0",
  "pytest-cov==7.0.0",
  "ruff==0.13.3",
  "yamllint==1.37.1",
]

docs = [
  "sphinx>=8.2.3",
  "sphinx-rtd-theme>=3.0.2",
  "sphinx-autobuild",
  "sphinxcontrib-mermaid",
]
